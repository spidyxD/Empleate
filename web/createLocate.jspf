<%-- any content can be specified here e.g.: --%>
<%@ page pageEncoding="UTF-8" %>
<!-- Modal Structure -->

<div id="createLocate" class="modal">
    <div class="modal-content">
        
     <div class="row">
     <div class="col s12">
     <input id="pac-input" class="controls" type="text" placeholder="Search Box">     
     <div id="map"></div>
     <div id="infowindow-content">
      <span id="place-name"  class="title"></span><br>
      Place ID <span id="place-id"></span><br>
      <span id="place-address"></span>
    </div>

   <script type="text/javascript">
         
         function load_peta() 
         {
          var my_place;   
          var map = new google.maps.Map(document.getElementById('map'), {
          zoom: 12,
          center: {lat: 9.8207388, lng: -84.2153649},
          mapTypeId: 'roadmap',
          mapTypeControl: true,
          mapTypeControlOptions: {
              style: google.maps.MapTypeControlStyle.HORIZONTAL_BAR,
              position: google.maps.ControlPosition.TOP_CENTER
          },
          zoomControl: true,
          zoomControlOptions: {
              position: google.maps.ControlPosition.LEFT_CENTER
          },
          scaleControl: true,
          streetViewControl: true,
          streetViewControlOptions: {
              position: google.maps.ControlPosition.LEFT_TOP
          },
          fullscreenControl: true
        });
        
        
            //guarda la ubicacion seleccionada 
         map.addListener('click', function(e) {
          placeMarkerAndPanTo(e.latLng, map);
            });
          
           //PARA LA GEOUBICACION ACTUAL DEL USUARIO
        var infoWindow = new google.maps.InfoWindow({map: map});

        // Try HTML5 geolocation.
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
            var pos = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };

            infoWindow.setPosition(pos);
            infoWindow.setContent('Location found.');
            map.setCenter(pos);
          }, function() {
            handleLocationError(true, infoWindow, map.getCenter());
          });
        } else {
          // Browser doesn't support Geolocation
          handleLocationError(false, infoWindow, map.getCenter());
        }
        
        //obtener la direccion del punto seleccionado
         var service = new google.maps.places.PlacesService(map);

        service.getDetails({
          placeId: 'ChIJN1t_tDeuEmsRUsoyG83frY4'
        }, function(place, status) {
          if (status === google.maps.places.PlacesServiceStatus.OK) {
            var marker = new google.maps.Marker({
              map: map,
              position: place.geometry.location
            });
            google.maps.event.addListener(marker, 'click', function() {
              infowindow.setContent('<div><strong>' + place.name + '</strong><br>' +
                'Place ID: ' + place.place_id + '<br>' +
                place.formatted_address + '</div>');
              infowindow.open(map, this);
              my_place=place;
            })
         }
        });
            
        
            
        //caja box para busqueda especifica   NOTA HAY QUE ACTIVAR LA API EL SERVICIO PLACES PARA QUE FUNCIONE LA BUSQUEDA
        // Create the search box and link it to the UI element.
        var input = document.getElementById('pac-input');
        var searchBox = new google.maps.places.SearchBox(input);
        map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

        // Bias the SearchBox results towards current map's viewport.
        map.addListener('bounds_changed', function() {
          searchBox.setBounds(map.getBounds());
        });

        var markers = [];
        // Listen for the event fired when the user selects a prediction and retrieve
        // more details for that place.
        searchBox.addListener('places_changed', function() {
          var places = searchBox.getPlaces();

          if (places.length == 0) {
            return;
          }

          // Clear out the old markers.
          markers.forEach(function(marker) {
            marker.setMap(null);
          });
          markers = [];

          // For each place, get the icon, name and location.
          var bounds = new google.maps.LatLngBounds();
          places.forEach(function(place) {
            if (!place.geometry) {
              console.log("Returned place contains no geometry");
              return;
            }
            var icon = {
              url: place.icon,
              size: new google.maps.Size(71, 71),
              origin: new google.maps.Point(0, 0),
              anchor: new google.maps.Point(17, 34),
              scaledSize: new google.maps.Size(25, 25)
            };

            // Create a marker for each place.
            markers.push(new google.maps.Marker({
              map: map,
              icon: icon,
              title: place.name,
              position: place.geometry.location
            }));

            if (place.geometry.viewport) {
              // Only geocodes have viewport.
              bounds.union(place.geometry.viewport);
            } else {
              bounds.extend(place.geometry.location);
            }
          });
          map.fitBounds(bounds);
        });
        
        var input = document.getElementById('pac-input');

        var autocomplete = new google.maps.places.Autocomplete(input);
        autocomplete.bindTo('bounds', map);

        map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

        var infowindow = new google.maps.InfoWindow();
        var marker = new google.maps.Marker({
          map: map
        });
        marker.addListener('click', function() {
          infowindow.open(map, marker);
        });

        autocomplete.addListener('place_changed', function() {
          infowindow.close();
          var place = autocomplete.getPlace();
          if (!place.geometry) {
            return;
          }

          if (place.geometry.viewport) {
            map.fitBounds(place.geometry.viewport);
          } else {
            map.setCenter(place.geometry.location);
            map.setZoom(17);
          }

          // Set the position of the marker using the place ID and location.
          marker.setPlace({
            placeId: place.place_id,
            location: place.geometry.location
          });
          marker.setVisible(true);

          document.getElementById('place-name').textContent = place.name;
          document.getElementById('place-id').textContent = place.place_id;
          document.getElementById('place-address').textContent =
              place.formatted_address;
          infowindow.setContent(document.getElementById('infowindow-content'));
          infowindow.open(map, marker);
        });


    }
        
         
       function handleLocationError(browserHasGeolocation, infoWindow, pos) {
        infoWindow.setPosition(pos);
        infoWindow.setContent(browserHasGeolocation ?
                              'Error: The Geolocation service failed.' :
                              'Error: Your browser doesn\'t support geolocation.');
      }
     

       
         
         
         //Muestra las coordenadas en consola del punto seleccionado en el mapa
         var marker;
      function placeMarkerAndPanTo(latLng, map) {
        if ( marker ) {
          marker.setPosition(latLng);
          console.log(marker.getPosition().lat()+" "+marker.getPosition().lng());
        } else {
          marker = new google.maps.Marker({
          position: latLng,
          map: map});
          console.log(marker.getPosition().lat()+" "+marker.getPosition().lng());
       }
   
    }
     </script>
    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAXHkW8XZy3R2tQa_326VbuFp29wDJ93Qw&libraries=places&callback=load_peta"
     type="text/javascript"></script>
     </div>
     </div><br><br><br><br><br><br><br><br><br><br><br><br><br>
        <div class="row">
            <div class="col s12">
                <a class="btn-floating btn-large waves-effect waves-light red" onclick="alerta()"><i class="material-icons">add</i></a>
            
           </div>   
            </div>
    </div>
</div> 
<script>
    function alerta(){
        giveLat();
        giveLng();
        address();
        window.alert("Ubicacion a√±adida!");
        
    }
</script>
<script>
   function showX(x){
        document.getElementById("localeX").value = x;
    }  
    function giveLat(){
        var x = marker.getPosition().lat();
        showX(x);
        
    }        
    
    //document.addEventListener("DOMContentLoaded",loaded);
    
    
</script>
<script>
    function showY(y){
	document.getElementById("localeY").value = y;
    }  
    function giveLng(){
        var y = marker.getPosition().lng();  
        showY(y);
      
    }
   
    //document.addEventListener("DOMContentLoaded",loaded);

</script>
<script>
    function address(){
        document.getElementById("direccion").value =  document.getElementById("pac-input").value;   
    }
    
</script>    